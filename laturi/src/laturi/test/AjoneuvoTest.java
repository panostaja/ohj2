package laturi.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import laturi.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.04.18 09:35:40 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AjoneuvoTest {


  // Generated by ComTest BEGIN
  /** testParse73 */
  @Test
  public void testParse73() {    // Ajoneuvo: 73
    Ajoneuvo ajoneuvo = new Ajoneuvo(); 
    ajoneuvo.parse("   2  |  VAU-456   | Seat |  Mii"); 
    assertEquals("From: Ajoneuvo line: 76", 2, ajoneuvo.getTunnusNro()); 
    ajoneuvo.rekisteroi(); 
    int n = ajoneuvo.getTunnusNro(); 
    ajoneuvo.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    ajoneuvo.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Ajoneuvo line: 83", n+20+1, ajoneuvo.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi124 */
  @Test
  public void testRekisteroi124() {    // Ajoneuvo: 124
    Ajoneuvo auto1 = new Ajoneuvo(); 
    assertEquals("From: Ajoneuvo line: 126", 0, auto1.getTunnusNro()); 
    auto1.rekisteroi(); 
    Ajoneuvo auto2 = new Ajoneuvo(); 
    auto2.rekisteroi(); 
    int n1 = auto1.getTunnusNro(); 
    int n2 = auto2.getTunnusNro(); 
    assertEquals("From: Ajoneuvo line: 132", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString168 */
  @Test
  public void testToString168() {    // Ajoneuvo: 168
    Ajoneuvo ajoneuvo = new Ajoneuvo(); 
    ajoneuvo.parse("   2  |  VAU-456   |Seat |   Mii"); 
    assertEquals("From: Ajoneuvo line: 171", true, ajoneuvo.toString().startsWith("2|VAU-456|Seat|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta320 */
  @Test
  public void testAseta320() {    // Ajoneuvo: 320
    Jasen jasen = new Jasen(); 
    assertEquals("From: Ajoneuvo line: 322", null, jasen.aseta(1,"Ankka Aku")); 
    { String _l_=jasen.aseta(2,"kissa"),_r_="Hetu liian lyhyt"; if ( !_l_.matches(_r_) ) fail("From: Ajoneuvo line: 323" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}
    assertEquals("From: Ajoneuvo line: 324", "Tarkistusmerkin kuuluisi olla C", jasen.aseta(2,"030201-1111")); 
    assertEquals("From: Ajoneuvo line: 325", null, jasen.aseta(2,"030201-111C")); 
    assertEquals("From: Ajoneuvo line: 326", "Liittymisvuosi väärin jono = \"kissa\"", jasen.aseta(9,"kissa")); 
    assertEquals("From: Ajoneuvo line: 327", null, jasen.aseta(9,"1940")); 
  } // Generated by ComTest END
}